namespace SpriteKind {
    export const coin = SpriteKind.create()
}
namespace myTiles {
    //% blockIdentity=images._tile
    export const tile0 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile1 = img`
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
`
    //% blockIdentity=images._tile
    export const tile2 = img`
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
`
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.coin, function (sprite, otherSprite) {
    otherSprite.destroy()
    info.changeScoreBy(1)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Enemy, function (sprite, otherSprite) {
    otherSprite.destroy()
    game.over(false)
})
let reina_enemiga: Sprite = null
let moneda: Sprite = null
let princesa = sprites.create(img`
. . . . . . f f f f 4 4 f . . . 
. . . . f f b f 5 4 5 5 4 f . . 
. . . f b 3 3 e 4 5 5 5 5 f . . 
. . f b 3 3 3 3 e 4 4 4 e f . . 
. . f 3 3 3 3 3 3 3 3 3 3 f . . 
. . f 3 3 3 3 e b 3 e e 3 3 f . 
. . f 3 3 3 3 f f e e e 3 3 f . 
. . f b b b b f b 1 e e e 3 f . 
. . f b b b b e 1 f 4 4 e f . . 
. f f b b b b f 4 4 4 4 f . . . 
. f b b b b f f f e e e f . . . 
. . f b b f 4 4 e d d d f . . . 
. . . f f e 4 4 e d d d f . . . 
. . . . f b e e b d b d b f . . 
. . . . f f d 1 d 1 d 1 f f . . 
. . . . . . f f b b f f . . . . 
`, SpriteKind.Player)
controller.moveSprite(princesa)
tiles.setTilemap(tiles.createTilemap(
            hex`1e001e00010101010101010101010101010101010101010101010101010101010101010809090909090910010101010101010101010101010108090909100d01010c0202020202020b010101010101010101010101010102100202020b01010c0202020202110b010101010101010101010101010102020202020b01010c02021002020202090909090909090909090909090902020202020b01010c020202020202020a0a0a02020a100a0a020211020202021102100b01010c0202020210020b0101010c0b010101010c0202020b010f0a0a0a0a0101100202020202020b0101010c0b010101010c0210020b01010101010101010f0a0a0a0a0a0a0e0101010c02070707070f0202020e010707070707010101010101010101010101010c10030310070101010101070703031007010101010101010101010101010c02030303030707070707070303030307070101010101010101010101010c0b07070703030303030303030311030307010809090909090909090909020d01010707031103030303030303030307010c02020202020202020211020b010101010c0207070707070707070707010c02100202021002020202020b010101010c0b01010101010101010101010c02020202020202020202020b0101010c020b01010101010101010101010c02020211020202020202100b01010110020b01010101080909090901010f0a0a0a0a0a0a0a0a0a0a0e0b0101010c02110108090909100202110b0101010101010101010101010101010101010c0b010c020202020202020b0101010101010101010101010101010101010c0b010c0a0a0a0a0a0a0a010101070707070707070707010101010101010c0b010c0b010101010101010101071003030303030307010101010101010c0b010c0b010101010101010107070303030303110307070707070708020202020202091001010101010107030303030303030303030303030302021002020202020b01010101010107030303031103030303030303030302020202021102020b0101010101010107031003030303030307070707070c020202020202020b0101010101010101070707070703100701010101010f110a0a0a0a0a0a0a0101010101010101010101010707070101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`,
            img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 2 
2 . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 2 
2 . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . . 2 2 2 . . 2 2 2 2 . . . . . 2 . . . . . 2 
2 . . . . . . . . 2 2 2 . . 2 2 2 2 . . . . . 2 2 2 2 2 2 2 
2 . . . . . . . . 2 2 2 . . . . . . . . . . . 2 . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 2 2 2 2 2 . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . 2 2 . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . 2 2 2 2 . . . . . . . . . . . . 
2 . . . . . . . . . . . . . 2 2 2 2 . . 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . 2 2 2 . . . 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . 2 2 2 . . . 2 2 2 2 . . . . . 2 
2 . . . . . . . . . . . . . 2 2 2 . . . 2 . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 2 . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 2 . . . . . . . . 2 
2 2 . . . . . . . . . 2 2 2 2 2 2 2 . . 2 . . 2 2 2 2 2 2 2 
2 2 . . . . . . . . . 2 2 2 2 2 2 2 . . 2 . . 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 
2 2 . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 
2 2 2 . . . . . . . . 2 2 2 2 2 . . . . . . . . . 2 2 2 2 2 
2 2 2 2 2 2 2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`,
            [myTiles.tile0,sprites.castle.tileGrass2,sprites.castle.tilePath5,sprites.castle.tileDarkGrass2,sprites.castle.tileGrass1,sprites.builtin.forestTiles0,sprites.builtin.forestTiles24,sprites.builtin.oceanSand0,sprites.castle.tilePath1,sprites.castle.tilePath2,sprites.castle.tilePath8,sprites.castle.tilePath6,sprites.castle.tilePath4,sprites.castle.tilePath3,sprites.castle.tilePath9,sprites.castle.tilePath7,myTiles.tile1,myTiles.tile2],
            TileScale.Sixteen
        ))
scene.cameraFollowSprite(princesa)
tiles.placeOnRandomTile(princesa, sprites.castle.tilePath5)
for (let value of tiles.getTilesByType(myTiles.tile1)) {
    moneda = sprites.create(img`
. . b b b b . . 
. b 5 5 5 5 b . 
b 5 d 3 3 d 5 b 
b 5 3 5 5 1 5 b 
c 5 3 5 5 1 d c 
c d d 1 1 d d c 
. f d d d d f . 
. . f f f f . . 
`, SpriteKind.coin)
    tiles.placeOnTile(moneda, value)
    tiles.setTileAt(value, sprites.castle.tilePath5)
}
for (let value of tiles.getTilesByType(myTiles.tile2)) {
    reina_enemiga = sprites.create(img`
. . . . . . 5 . 5 . . . . . . . 
. . . . . f 5 5 5 f f . . . . . 
. . . . f 1 5 2 5 1 6 f . . . . 
. . . f 1 6 6 6 6 6 1 6 f . . . 
. . . f 6 6 f f f f 6 1 f . . . 
. . . f 6 f 1 d d 1 f 6 f . . . 
. . f 6 f d f d d f d f 6 f . . 
. . f 6 f d 1 d d 1 d f 6 f . . 
. . f 6 6 f d d d d f 6 6 f . . 
. f 6 6 f 3 f f f f 3 f 6 6 f . 
. . f f d 3 5 3 3 5 3 d f f . . 
. . f d d f 3 5 5 3 f d d f . . 
. . . f f 3 3 3 3 3 3 f f . . . 
. . . f 3 3 5 3 3 5 3 3 f . . . 
. . . f f f f f f f f f f . . . 
. . . . . f f . . f f . . . . . 
`, SpriteKind.Enemy)
    tiles.placeOnTile(reina_enemiga, value)
    tiles.setTileAt(value, sprites.castle.tilePath5)
}
